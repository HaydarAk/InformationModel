@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ids: <https://w3id.org/ids/core/> .
@prefix idsc_dt: <https://w3id.org/ids/code/dt/> .
@prefix idsm: <https://w3id.org/ids/metamodel/> .

# Instances
# ---------

idsc_dt:dateTime a  ids:DataType;
    rdfs:seeAlso <xsd:dateTime>;
    idsm:constantIdentifier "XSD_DATETIME".

idsc_dt:string a  ids:DataType;
    rdfs:seeAlso <xsd:string>;
    idsm:constantIdentifier "XSD_STRING".

idsc_dt:bigint a  ids:DataType;
    rdfs:seeAlso <xsd:integer>;
    idsm:constantIdentifier "XSD_INTEGER".

idsc_dt:integer a  ids:DataType;
    rdfs:seeAlso <xsd:int>;
    idsm:constantIdentifier "XSD_INT".

idsc_dt:long a  ids:DataType;
    rdfs:seeAlso <xsd:long>;
    idsm:constantIdentifier "XSD_LONG".

idsc_dt:short a  ids:DataType;
    rdfs:seeAlso <xsd:short>;
    idsm:constantIdentifier "XSD_SHORT".

idsc_dt:float a  ids:DataType;
    rdfs:seeAlso <xsd:float>;
    idsm:constantIdentifier "XSD_FLOAT".

idsc_dt:double a  ids:DataType;
    rdfs:seeAlso <xsd:double>;
    idsm:constantIdentifier "XSD_DOUBLE".

idsc_dt:boolean a  ids:DataType;
    rdfs:seeAlso <xsd:boolean>;
    idsm:constantIdentifier "XSD_BOOLEAN".

idsc_dt:byte a  ids:DataType;
    rdfs:seeAlso <xsd:byte>;
    idsm:constantIdentifier "XSD_BYTE".

idsc_dt:base64Binary a  ids:DataType;
    rdfs:seeAlso <xsd:base64Binary>;
    idsm:constantIdentifier "XSD_BASE64BINARY".

idsc_dt:time a  ids:DataType;
    rdfs:seeAlso <xsd:time>;
    idsm:constantIdentifier "XSD_TIME".

idsc_dt:date a  ids:DataType;
    rdfs:seeAlso <xsd:date>;
    idsm:constantIdentifier "XSD_DATE".

idsc_dt:anyURI a  ids:DataType;
    rdfs:seeAlso <xsd:anyURI>;
    idsm:constantIdentifier "XSD_ANY_URI".

idsc_dt:complexType a  ids:DataType;
    rdfs:comment "Complex nested data type.";
    idsm:constantIdentifier "COMPLEX_TYPE".

idsc_dt:unspecified a  ids:DataType;
    idsm:constantIdentifier "UNSPECIFIED".

